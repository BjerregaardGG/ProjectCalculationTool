CREATE SCHEMA IF NOT EXISTS ProjectCalculationDB;

DROP TABLE IF EXISTS EMPLOYEE CASCADE;
DROP TABLE IF EXISTS PROJECT CASCADE;
DROP TABLE IF EXISTS PROJECT_TEAM CASCADE;
DROP TABLE IF EXISTS TASK CASCADE;
DROP TABLE IF EXISTS TASK_EMPLOYEE CASCADE;
DROP TABLE IF EXISTS SUB_PROJECT CASCADE;

CREATE TABLE EMPLOYEE
(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    USERNAME VARCHAR(30),
    PASSWORD VARCHAR(40),
    NAME VARCHAR(30),
    EMAIL VARCHAR(30) UNIQUE,
    ROLES VARCHAR(10) CHECK (ROLES IN ('INTERN', 'JUNIOR', 'SENIOR', 'MANAGER')),
    PRIMARY KEY (ID)
);

CREATE TABLE PROJECT
(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(30),
    START_DATE DATE,
    DEADLINE DATE,
    BUDGET DOUBLE,
    DESCRIPTION VARCHAR(100),
    STATUS BOOLEAN,
    PRIMARY KEY (ID)
);

CREATE TABLE SUB_PROJECT
(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    PROJECT_ID INTEGER,
    NAME VARCHAR(30),
    START_DATE DATE,
    DEADLINE DATE,
    BUDGET DOUBLE,
    DESCRIPTION VARCHAR(100),
    STATUS BOOLEAN,
    PRIMARY KEY (ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID) ON DELETE CASCADE
);

CREATE TABLE PROJECT_TEAM
(
    PROJECT_ID INTEGER,
    EMPLOYEE_ID INTEGER,
    PRIMARY KEY (PROJECT_ID, EMPLOYEE_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID) ON DELETE CASCADE,
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE
);

CREATE TABLE TASK
(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    SUB_PROJECT_ID INTEGER,
    NAME VARCHAR(30),
    START_DATE DATE,
    DEADLINE DATE,
    DURATION DOUBLE,
    DESCRIPTION VARCHAR(100),
    STATUS BOOLEAN,
    PRIMARY KEY (ID),
    FOREIGN KEY (SUB_PROJECT_ID) REFERENCES SUB_PROJECT(ID) ON DELETE CASCADE
);

CREATE TABLE TASK_EMPLOYEE
(
    TASK_ID INTEGER,
    EMPLOYEE_ID INTEGER,
    PRIMARY KEY (TASK_ID, EMPLOYEE_ID),
    FOREIGN KEY (TASK_ID) REFERENCES TASK(ID) ON DELETE CASCADE,
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE
);
